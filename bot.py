import aiogram
from aiogram.types import Message
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from PIL import Image, ImageDraw
from aiogram.dispatcher.filters import Text
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from decimal import Decimal
import openai
import loguru
from loguru import logger
from aiogram import Bot, types
import markups as nav

storage = MemoryStorage()

class Form(StatesGroup):
    start = State()
    start1 = State()

openai.api_key = "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"

logger.add("debug.log")
# Initialize bot
bot = aiogram.Bot(token="6049996039:AAHkXlaJzOM6MHa40IaKocCq1A7BPWF0X08")
dp = Dispatcher(bot, storage=storage)

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ –±–æ—Ç –ò–ò –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å –Ω–∞ —Ä–∞–∑–Ω—ã–π —è–∑—ã–∫–∞—Ö! –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∏–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Ç–æ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ;)\n\nHi, this is an AI bot that can help you with any question in different languages! Just select what you need on the buttons or keyboard;)\n\n–ë–æ—Ç —Å–¥–µ–ª–∞–Ω @hnkych | Bot created @hnkych", reply_markup=nav.mainMenu)

@dp.message_handler()
async def users(message: types.Message):
            
    if message.text in ["‚ùì–°–ø—Ä–æ—Å–∏—Ç—å(–ü–æ–ø—Ä–æ—Å–∏—Ç—å)/Ask‚ùì"]:
        await Form.start1.set()
        await bot.send_message(message.from_user.id, "‚ôªÔ∏è–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å/Write your request‚ôªÔ∏è")

    if message.text in ["‚ú®–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/Generate An Image‚ú®"]:
        await Form.start.set()
        await bot.send_message(message.from_user.id, "‚ôªÔ∏è–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å/Write your request‚ôªÔ∏è")
    
    if message.text in ["üí∏–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ê–≤—Ç–æ—Ä–∞/Support the Authorüí∏"]:
        await bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç. –¢–∞–∫ –∫–∞–∫ –º–æ–π –±–æ—Ç –Ω–∏–∫–∞–∫ –Ω–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –º–Ω–µ –ø—Ä–∏–±—ã–ª–∏ –∏ –¥–ª—è –≤–∞—Å –æ–Ω —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n–í –º–æ—ë–º –±–æ—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –Ω–µ—Ç —Ä–µ–∫–ª–∞–º—ã. –ù–æ —Å–∞–º–∏ api –∫–ª—é—á–∏ –¥–ª—è –±–æ—Ç–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç—Å—è –º–Ω–æ—é –∑–∞ –º–æ–∏ –¥–µ–Ω—å–≥–∏, –ø–æ—ç—Ç–æ–º—É —è —Ä–µ—à–∏–ª —Å–æ–∑–¥–∞—Ç—å —Ç–∞–∫—É—é –∫–Ω–æ–ø–∫—É.\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç —Ç–æ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ–Ω–µ–≥ –Ω–∏–∂–µ. –Ø –Ω–∏–∫–æ–≥–æ –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è—é –ø–ª–∞—Ç–∏—Ç—å, –≤—ã —Ä–µ—à–∞–µ—Ç–µ —Å–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–µ–Ω—è –∏–ª–∏ –Ω–µ—Ç, –∞ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ —Å–ø–∞—Å–∏–±–æ @hnkych\n\n–†–µ–∫–≤–∏–∑–∏—Ç—ã:\n QIWI: https://qiwi.com/n/H1NEKY\n VISA CARD: <code>4890 4947 9930 5347</code>\n MIR CARD: <code>2200 7302 4024 4190</code>\n–ó–∞—Ä–∞–Ω–µ–µ —Å–ø–∞—Å–∏–±–æ ;)", parse_mode='html')

@dp.message_handler(state=Form.start)
async def process_name_step(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_name = message.from_user.username
    text = message.text
    await bot.send_message(message.from_user.id, "–ü–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥, –±–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç‚ù§Ô∏è\n\nWait a couple of seconds, the bot writes an answer‚ù§Ô∏è")
    response = openai.Image.create(
        prompt=message.text,
        n=1,
        size="1024x1024"
    )
    image_url = response['data'][0]['url']
    await message.reply_photo(photo=image_url)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_name} / {user_id} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ç–æ: {text}")
    await state.finish()


@dp.message_handler(state=Form.start1)
async def process_name_step1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_name = message.from_user.username
    text = message.text
    await bot.send_message(message.from_user.id, "–ü–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥, –±–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç‚ù§Ô∏è\n\nWait a couple of seconds, the bot writes an answer‚ù§Ô∏è")
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=message.text,
        max_tokens=4048,
        n=1,
        stop=None,
        temperature=1,
    )
    await message.reply(response.choices[0].text + "\n\n–ë–æ—Ç —Å–¥–µ–ª–∞–Ω @hnkych | Bot created @hnkych", reply_markup=nav.mainMenu)

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_name} / {user_id} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å : {text}")
    await state.finish()


    
    


# Start the bot
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)